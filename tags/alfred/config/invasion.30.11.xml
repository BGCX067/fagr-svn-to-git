<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	default-init-method="init" default-destroy-method="destroy">

	<bean id="simulation" class="il.ac.tau.yoavram.pes.Simulation">
		<property name="terminators">
			<list>
				<bean id="tickTerminator" class="il.ac.tau.yoavram.pes.terminators.TickTerminator">
					<property name="endAtTick" value="${numberOfTicks}" />
				</bean>
			</list>
		</property>
		<property name="model" ref="model" />
		<property name="dataGatherers"><!-- each gatherer clears the aggregators it uses 
				therefore can use only one instance declared in this *.xml file as a reference 
				and reference it in each gatherer bean -->
			<list>
				<ref bean="dataGatherer" />
			</list>
		</property>
		<property name="blockAtEnd" value="${simulation.block}" />
		<property name="ID" value="${jobName}.${time}" />
	</bean>
	<bean class="il.ac.tau.yoavram.pes.SerializableModel.Factory" id="modelFactory">
		<property name="filename"
			value="${serialization.dir}/${serialization.filename}" />
	</bean>
	<bean id="model" class="il.ac.tau.arielgue.fagr.OutcrossModel"
		factory-bean="modelFactory" factory-method="deserialize">
		<property name="serializedAtEnd" value="false" />
		<property name="ID" value="${jobName}.${time}" />
		<property name="invasion">
			<!-- if we want different invasion classes we can try class="${name}" 
				or make a factory just like modelFactory and its use in model bean -->
			<!-- <bean class="il.ac.tau.arielgue.fagr.FaoInvasion"> -->
			<bean class="${invasionClassName}">
				<property name="invasionRate" value="${invasionRate}" />
			</bean>
		</property>
	</bean>
	<bean id="dataGatherer"
		class="il.ac.tau.arielgue.fagr.statistics.OutcrossingDataGatherer">
		<property name="model" ref="model" />
		<property name="interval" value="${statistics.interval}" />
		<property name="filters"> <!-- Filters are AND filters (not OR) -->
			<list>
			</list>
		</property>
		<property name="listeners">
			<list>
				<bean class="il.ac.tau.yoavram.pes.statistics.listeners.CsvWriterListener">
					<property name="csvWriter">
						<bean class="il.ac.tau.yoavram.pes.io.CsvWriter">
							<property name="filename" value="${jobName}.${time}" />
							<property name="directory" value="${output.dir}/${jobName}" />
							<!-- if wanting to compress and read with 7ZIP change value to TRUE -->
							<property name="compress" value="false" />
							<property name="writeTempFile" value="true" />

						</bean>
					</property>
				</bean>
				<bean class="il.ac.tau.yoavram.pes.statistics.listeners.ChartDrawer">
					<property name="title" value="${jobName}.${time}" />
					<property name="showApplet" value="${simulation.block}" />
					<property name="filename"
						value="${output.dir}/${jobName}/${jobName}.${time}" />
				</bean>
			</list>
		</property>
		<property name="aggregators">
			<list>
				<bean class="il.ac.tau.yoavram.pes.statistics.aggregators.Ticker">
					<property name="name" value="tick" />
				</bean>
				<ref bean="meanFitness" />
				<bean class="il.ac.tau.arielgue.fagr.statistics.aggregators.MinFitness">
					<property name="name" value="min fitness" />
				</bean>
				<bean class="il.ac.tau.arielgue.fagr.statistics.aggregators.MaxFitness">
					<property name="name" value="max fitness" />
				</bean>
				<bean
					class="il.ac.tau.arielgue.fagr.statistics.aggregators.StandardDeviationFitness">
					<property name="name" value="stdev fitness" />
					<property name="meanAggregator" ref="meanFitness" />
				</bean>
			</list>
		</property>
	</bean>
	<bean id="meanFitness" <!-- creating a reference for a bean used in other beans -->
		class="il.ac.tau.arielgue.fagr.statistics.aggregators.MeanFitness">
		<property name="name" value="mean fitness" />
	</bean>
</beans>